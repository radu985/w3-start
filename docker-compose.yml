version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: portfolio_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: portfolio_chat
      POSTGRES_USER: portfolio_user
      POSTGRES_PASSWORD: portfolio_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.js:/docker-entrypoint-initdb.d/init-db.js
    ports:
      - "5432:5432"
    networks:
      - portfolio_network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: portfolio_app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://portfolio_user:portfolio_password@postgres:5432/portfolio_chat
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - ADMIN_EMAIL=admin@example.com
      - ADMIN_PASSWORD=admin123
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - portfolio_network

  # Socket.IO Server
  socket:
    build:
      context: ./socket
      dockerfile: Dockerfile
    container_name: portfolio_socket
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://portfolio_user:portfolio_password@postgres:5432/portfolio_chat
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - portfolio_network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: portfolio_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
      - socket
    networks:
      - portfolio_network

volumes:
  postgres_data:

networks:
  portfolio_network:
    driver: bridge 